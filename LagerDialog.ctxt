#BlueJ class context
comment0.target=LagerDialog
comment0.text=\r\n\ Dialog-Klasse\ mit\ der\ Klasse\ Lager.\r\n\ \r\n\ @author\ Rochella\ Djouakeu\ Vofo\ &\ Joel\ Boergers.\ \r\n\ @version\ 0.1\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ Methode\ zur\ Durchfuehrung\ des\ Programms.\r\n\r\n\ @param\ args\ Ist\ ein\ array\ mit\ strings.\r\n
comment10.params=
comment10.target=double\ lesenPreis()
comment10.text=\r\n\ Methode\ zum\ Lesen\ eines\ Preises.\r\n\r\n\ @return\ der\ gelesene\ Preis.\r\n
comment11.params=
comment11.target=java.lang.String\ lesenArt()
comment11.text=\r\n\ \ Methode\ zum\ Lesen\ eine\ Art\ eines\ Artikels.\r\n\r\n\ @return\ die\ gelesene\ Art.\r\n
comment12.params=
comment12.target=void\ darstellenAlleArtikel()
comment12.text=\r\n\ Alle\ Artikel\ im\ Lager\ darstellen.\r\n\r\n
comment13.params=
comment13.target=void\ pruefenArtikel()
comment13.text=\r\n\ Methode\ zum\ Pruefen\ eines\ Artikels.\ Hier\ wird\ zuerst\ gepr\u00FCft,\ ob\ ein\ artikel\ vorliegt,\ wenn\ man\ eine\ Methode\r\n\ auf\ einen\ Artikel\ anwenden\ will.\ Wenn\ kein\ Artikel\ vorliegt,\ muss\ eins\ erzeugt\ werden.\r\n\r\n
comment14.params=
comment14.target=int\ waehlenKonstruktor()
comment14.text=\r\n\ Methode\ zur\ Bestimmung\ mit\ welchem\ Konstruktor\ man\ einen\ Artikel\ anlegen\ will.\r\n\r\n\ @return\ konstruktor\ ist\ ein\ Integer.\r\n\ \ \ \ \ \ Falls\ 1,\ wird\ der\ Konstruktor\ mit\ 3\ Parametern\ benutzt,\ um\ den\ Artikel\ zu\ erzeugen.\r\n\ \ \ \ \ \ Falls\ 2,\ wird\ der\ Konstruktor\ mit\ 2\ Parametern\ benutzt,\ um\ den\ Artikel\ zu\ erzeugen.\r\n
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Methode,\ die\ die\ Programmsschleife\ enthaehlt.\r\n\r\n
comment3.params=
comment3.target=int\ einlesenFunktion()
comment3.text=\r\n\ Methode\ zum\ Einlesen\ einer\ Funktion.\r\n\r\n\ @return\ einen\ int,\ der\ zur\ entsprechenden\ Funktion\ in\ ausfuehrenFunktion\ fuehrt.\ \r\n
comment4.params=funktion
comment4.target=void\ ausfuehrenFunktion(int)
comment4.text=\r\n\ Methode,\ die\ die\ entspreschende\ Methoden\ im\ Program\ aufruft.\r\n\r\n\ @param\ \ einen\ Integer,\ der\ die\ Durchf\u00FChrung\ der\ entspreschenden\ Methode\ versusacht.\r\n
comment5.params=
comment5.target=void\ lagerHerstellen()
comment5.text=\r\n\ Lager\ mit\ eine\ gegebene\ oder\ standard\ Gr\u00F6\u00DFe\ herstellen.\r\n\r\n
comment6.params=konstruktorNr
comment6.target=Artikel\ registrierenArtikel(int)
comment6.text=\r\n\ Methode\ zum\ Registrieren\ eines\ Artikels.\r\n\r\n\ @param\ konstruktorNr\ Ist\ 1\ oder\ 2.\r\n\ \ \ \ \ \ Falls\ 1,\ wird\ der\ Konstruktor\ mit\ 3\ Parametern\ benutzt,\ um\ den\ Artikel\ zu\ erzeugen.\r\n\ \ \ \ \ \ Falls\ 2,\ wird\ der\ Konstruktor\ mit\ 2\ Parametern\ benutzt,\ um\ den\ Artikel\ zu\ erzeugen.\r\n\ @return\ \ den\ registrierten\ \ Artikel.\r\n
comment7.params=
comment7.target=int\ lesenArtikelNr()
comment7.text=\r\n\ Methode\ zum\ Lesen\ einer\ Artikelnummer.\r\n\r\n\ @return\ die\ Nummer\ des\ Artikels.\r\n
comment8.params=
comment8.target=int\ lesenMenge()
comment8.text=\r\n\ Methode\ zum\ Lesen\ eines\ Betrags.\r\n\r\n\ @return\ der\ gelesene\ Betrag.\r\n
comment9.params=
comment9.target=double\ lesenProzent()
comment9.text=\r\n\ Methode\ zum\ Lesen\ eines\ Prozentsatzes.\r\n\r\n\ @return\ der\ gelesene\ Prozentsatz.\r\n
numComments=15
